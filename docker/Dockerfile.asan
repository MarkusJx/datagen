FROM debian:bookworm as builder

ADD . /app
WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    libclang-dev clang libatomic1 llvm dos2unix build-essential openssl libssl-dev libclang-rt-dev && \
    apt-get install -y curl pkg-config && \
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y && \
    PATH="$PATH:/root/.cargo/bin" \
    rustup toolchain install nightly --allow-downgrade --profile default --component clippy && \
    PATH="$PATH:/root/.cargo/bin" \
    rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu && \
    apt-get remove -y curl && apt-get autoremove -y && apt-get clean -y

ENV RUSTFLAGS="-Clinker=clang -Zsanitizer=address"
#ENV RUSTDOCFLAGS="-Clinker=clang -Zsanitizer=address -Clink-args=-fsanitize=address"
ENV PATH="$PATH:/root/.cargo/bin"

RUN cargo build -Zbuild-std -p datagen-rs-cli --target=x86_64-unknown-linux-gnu
ENV LIBSQLITE3_FLAGS="SQLITE_MAX_VARIABLE_NUMBER=1000000"
ENV RUSTFLAGS=""
RUN cargo build -Zbuild-std -p datagen-rs-openaddresses-plugin -F sqlite --target=x86_64-unknown-linux-gnu
RUN cargo build -Zbuild-std -p datagen-rs-upload-plugin --target=x86_64-unknown-linux-gnu

RUN dos2unix /app/docker/docker-entrypoint.sh && \
    chmod +x /app/docker/docker-entrypoint.sh

RUN cp /app/target/x86_64-unknown-linux-gnu/debug/datagen /usr/local/bin/datagen
RUN cp /app/target/x86_64-unknown-linux-gnu/debug/libopenaddresses_plugin.so /usr/local/lib/libopenaddresses_plugin.so
RUN cp /app/target/x86_64-unknown-linux-gnu/debug/libupload_plugin.so /usr/local/lib/libupload_plugin.so
RUN cp /app/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh

ENV DATAGEN_PLUGIN_DIR=/usr/local/lib
ENV ASAN_OPTIONS="detect_leaks=0 symbolize=1"
#ENV LD_PRELOAD=/usr/lib/llvm-14/lib/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so
#ENV RUST_BACKTRACE=1

ENTRYPOINT ["docker-entrypoint.sh"]