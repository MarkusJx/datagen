name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cargo-bins/cargo-binstall@main
      - name: Install nextest
        run: cargo binstall --no-confirm cargo-nextest --secure
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Install types dependencies
        run: npm ci
        working-directory: packages/types
      - name: Install test-plugin dependencies
        run: npm ci
        working-directory: packages/test-plugin
      - name: Build test-plugin
        run: npm run build
        working-directory: packages/test-plugin
      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo nextest run \
          -p datagen-rs-progress-plugin \
          -p datagen-rs-upload-plugin \
          -p datagen-rs-openaddresses-plugin --features sqlite \
          -p datagen-rs --features all \
          -p datagen-rs-node-runner --features nodejs -P ci \
          -p datagen-rs-sql-plugin
      - name: Run doc tests
        run: cargo test --doc
      - name: Create test summary
        uses: test-summary/action@dist
        if: always()
        with:
          show: all
          paths: target/nextest/ci/junit.xml

  test-node:
    strategy:
      matrix:
        node-version: [ 16.x, 18.x, 20.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Build wasm package
        run: |
          npm i -g wasm-pack
          wasm-pack build -t nodejs -d node-pkg --release --features schema
        working-directory: crates/datagen-wasm
      - name: Install types dependencies
        run: |
          npm ci
          npm run build
        working-directory: packages/types
      - name: Install dependencies
        run: npm ci
        working-directory: packages/datagen
      - name: Run tests
        run: npm test
        working-directory: packages/datagen

  test-docker:
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            skipUploadTests: 'false'
          - dockerfile: Dockerfile.alpine
            skipUploadTests: 'false'
          - dockerfile: Dockerfile.debian-slim
            skipUploadTests: 'true'
          - dockerfile: Dockerfile.alpine-slim
            skipUploadTests: 'true'
    
    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v4
      - name: Build container
        run: docker build -t datagen --file docker/${{matrix.dockerfile}} .
      - name: Download venom
        run: curl https://github.com/ovh/venom/releases/download/v1.1.0/venom.linux-amd64 -L -o /usr/local/bin/venom && chmod +x /usr/local/bin/venom
        working-directory: test
      - name: Run tests
        run: venom run test.yml --format=xml --output-dir=logs
        working-directory: test
        if: ${{matrix.skipUploadTests == 'false'}}
      - name: Run tests without upload
        run: venom run test.yml --format=xml --output-dir=logs --var="skipUpload=1"
        working-directory: test
        if: ${{matrix.skipUploadTests == 'true'}}
      - name: Create test summary
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test/logs/test_results_test.xml
          comment_mode: off
