name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4
    - name: Add target
      run: rustup target add ${{matrix.target}}
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.2.1
      with:
        key: ${{matrix.target}}
    - name: Build cli
      run: cargo build -p datagen-rs-cli -r --target ${{matrix.target}}
    - name: Build openaddresses plugin
      run: cargo build -p datagen-rs-openaddresses-plugin -r -F sqlite --target ${{matrix.target}}
      env:
        LIBSQLITE3_FLAGS: SQLITE_MAX_VARIABLE_NUMBER=1000000
    - name: Build upload-plugin
      run: cargo build -p datagen-rs-upload-plugin -r --target ${{matrix.target}}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3.1.3
      with:
        name: datagen-${{runner.os}}-${{matrix.target}}
        path: |
          target/*/release/datagen.exe
          target/*/release/datagen
          target/*/release/openaddresses_plugin.dll
          target/*/release/libopenaddresses_plugin.dylib
          target/*/release/libopenaddresses_plugin.so
          target/*/release/upload_plugin.dll
          target/*/release/libupload_plugin.dylib
          target/*/release/libupload_plugin.so

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ./docs/package-lock.json
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.1
        with:
          key: docs
      - name: Cache nextjs
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/docs/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/docs/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/docs/package-lock.json') }}-

      - name: Install types dependencies
        run: npm ci
        working-directory: packages/types
      - name: Build types
        run: npm run build
        working-directory: packages/types

      - name: Install dependencies
        run: npm ci
        working-directory: docs
      - name: Build website
        run: npm run build
        working-directory: docs

  build-node-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ./packages/cli/package-lock.json
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.1

      - name: Install types dependencies
        run: npm ci
        working-directory: packages/types
      - name: Install datagen-node dependencies
        run: npm ci
        working-directory: packages/datagen
      - name: Install node-cli dependencies
        run: npm ci
        working-directory: packages/cli

      - name: Build datagen-node
        run: npm run build
        working-directory: packages/datagen
      - name: Build node-cli
        run: npm run build
        working-directory: packages/cli
